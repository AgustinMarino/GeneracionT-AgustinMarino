.grid-container {
    display: grid;
    /* 1. Definir un layout con áreas nombradas */
    grid-template-areas:
        "header  header"  /* La primera fila tiene dos columnas, ambas ocupadas por 'header' */
        "sidebar content" /* La segunda fila tiene 'sidebar' en la primera columna y 'content' en la segunda */
        "footer  footer"; /* La tercera fila tiene dos columnas, ambas ocupadas por 'footer' */

    grid-template-columns: 150px 1fr; /* Una columna de 150px para el sidebar y el resto para el contenido */
    grid-template-rows: auto 1fr auto; /* Altura automática para header y footer, el resto para el contenido */
    gap: 15px; /* Espacio entre las áreas */
    min-height: 100vh; /* Para que el contenedor ocupe al menos toda la altura de la ventana */
    border: 2px solid #555;
    padding: 15px;
    box-sizing: border-box; /* Incluir padding y border en el tamaño total */
}

/* 2. Ubicar los elementos correspondientes en cada área usando grid-area */
.grid-header {
    grid-area: header;
    background-color: #ff6347; /* Tomato */
}

.grid-sidebar {
    grid-area: sidebar;
    background-color: #6a5acd; /* SlateBlue */
}

.grid-content {
    grid-area: content;
    background-color: #3cb371; /* MediumSeaGreen */
}

.grid-footer {
    grid-area: footer;
    background-color: #4682b4; /* SteelBlue */
}

/* Estilos básicos para los elementos del grid para hacerlos visibles */
.grid-container > * {
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 1.5em;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 2px 2px 5px rgba(0,0,0,0.2);
}

body {
    margin: 0;
    font-family: Arial, sans-serif;
    background-color: #f0f2f5;
}
